setwd("C:\\Users\\Sridhar\\Desktop\\Desktop_20150323\\Batch 13\\CSE 7315c\\Day04")
# Calculating probabilities and corresponding values
1 - pnorm(1800000, mean=1717000, sd=50940)
pnorm(1600000,1717000,50940)
pbinom(104, 150, 0.75, lower.tail = TRUE, log.p = FALSE)
1 - pnorm(104.5, 150*0.75, 150*0.75*0.25)
1 - pnorm(104.5, 150*0.75, sqrt(150*0.75*0.25))
pnorm(104.5, 150*0.75, sqrt(150*0.75*0.25))
pnorm(104, 150*0.75, sqrt(150*0.75*0.25))
pnorm(105, 150*0.75, sqrt(150*0.75*0.25))
pnorm(104.5, 150*0.75, sqrt(150*0.75*0.25))
pbinom(120, 150, 0.75, lower.tail = TRUE, log.p = FALSE) - pbinom(109, 150, 0.75, lower.tail = TRUE, log.p = FALSE)
pnorm(120.5, 150*0.75, sqrt(150*0.75*0.25))-
pnorm(109.5, 150*0.75, sqrt(150*0.75*0.25))
pbinom(120, 150, 0.75, lower.tail = TRUE, log.p = FALSE)-
pbinom(109, 150, 0.75, lower.tail = TRUE, log.p = FALSE)
pnorm(120.5, 150*0.75, sqrt(150*0.75*0.25))-
pnorm(109.5, 150*0.75, sqrt(150*0.75*0.25))
1-pnorm(230, 211, 46)
1-pnorm(230, 211, 46/sqrt(25))
qnorm(0.8, 0, 1)
qnorm(0.95, 0, 1)
qnorm(0.975, 0, 1)
qnorm(0.025, 0, 1)
qnorm(0.025, 0, 1)
qnorm(0.05, 0, 1)
qnorm(0.95, 0, 1)
pregnancy <- read.csv("HadlumPregnancy.csv", header=T, sep=",")
pregnancy = pregnancy[,-2]
summary(pregnancy)
var(pregnancy)
mean(pregnancy)
pnorm(340, mean(pregnancy), sd(pregnancy))
plot(pregnancy)
# Confidence Intervals
# Number of samples = 100
# Sample size = 200
data <- replicate(100, rnorm(200, mean(pregnancy), sd(pregnancy)))
#data <- matrix(rnorm(100*200, mean(pregnancy), sd(pregnancy)), 200)
norm.interval = function(data, variance = var(data), conf.level = 0.95)
{
z = qnorm((1 - conf.level)/2, lower.tail = FALSE)
xbar <- mean(data)
sdx <- sqrt(var(data)/length(data))
c(xbar - z * sdx, xbar + z * sdx)
}
norm.interval(pregnancy, 2)
conf.int <- apply(data, 2, norm.interval)
plot(range(conf.int), c(0, 1 + 100), type = "n", xlab = "mean tail length",
ylab = "sample run")
for (i in 1:100) lines(conf.int[, i], rep(i, 2), lwd = 1)
abline(v = mean(pregnancy), lwd = 3, lty = 1)
# Count number of intervals not containing population mean
sum(conf.int[1, ] <= mean(pregnancy) & conf.int[2, ] >= mean(pregnancy))
# Confidence Intervals in t-distribution
norm.interval(pregnancy, 2)
norm.interval(pregnancy, 1)
norm.interval(pregnancy, 2)
conf.int <- apply(data, 2, norm.interval)
data <- replicate(100, rnorm(200, mean(pregnancy), sd(pregnancy)))
#data <- matrix(rnorm(100*200, mean(pregnancy), sd(pregnancy)), 200)
norm.interval = function(data, variance = var(data), conf.level = 0.99)
{
z = qnorm((1 - conf.level)/2, lower.tail = FALSE)
xbar <- mean(data)
sdx <- sqrt(var(data)/length(data))
c(xbar - z * sdx, xbar + z * sdx)
}
norm.interval(pregnancy, 2)
conf.int <- apply(data, 2, norm.interval)
plot(range(conf.int), c(0, 1 + 100), type = "n", xlab = "mean tail length",
ylab = "sample run")
for (i in 1:100) lines(conf.int[, i], rep(i, 2), lwd = 1)
abline(v = mean(pregnancy), lwd = 3, lty = 1)
# Count number of intervals not containing population mean
sum(conf.int[1, ] <= mean(pregnancy) & conf.int[2, ] >= mean(pregnancy))
data <- replicate(100, rnorm(200, mean(pregnancy), sd(pregnancy)))
#data <- matrix(rnorm(100*200, mean(pregnancy), sd(pregnancy)), 200)
norm.interval = function(data, variance = var(data), conf.level = 0.95)
{
z = qnorm((1 - conf.level)/2, lower.tail = FALSE)
xbar <- mean(data)
sdx <- sqrt(var(data)/length(data))
c(xbar - z * sdx, xbar + z * sdx)
}
norm.interval(pregnancy, 2)
conf.int <- apply(data, 2, norm.interval)
plot(range(conf.int), c(0, 1 + 100), type = "n", xlab = "mean tail length",
ylab = "sample run")
for (i in 1:100) lines(conf.int[, i], rep(i, 2), lwd = 1)
abline(v = mean(pregnancy), lwd = 3, lty = 1)
# Count number of intervals containing population mean
sum(conf.int[1, ] <= mean(pregnancy) & conf.int[2, ] >= mean(pregnancy))
compoff <- c(6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16, 6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16,6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16, 6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16,6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16, 6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16)
compoff
t.test(compoff, conf.level = 0.95)
t.test(compoff, conf.level = 0.90)
ttest <- t.test(compoff)
ttest$statistic
#sd(compoff)
#ttest$parameter
compoff <- c(6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16, 6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16,6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16, 6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16,6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16, 6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16)
compoff
t.test(compoff, conf.level = 0.90)
compoff <- c(6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16)
compoff
t.test(compoff, conf.level = 0.90)
ttest <- t.test(compoff)
ttest$statistic
sd(compoff)
ttest$parameter
# Critical t value at a specified confidence level and degrees of freedom
conf.level = 0.95
df = 1000
qt((1-conf.level)/2, df)
z = qnorm((1 - conf.level)/2, lower.tail = FALSE)
xbar = 80
sdx = 4
c(xbar - z * sdx, xbar + z * sdx)
z = qnorm((1 - conf.level), lower.tail = FALSE)
xbar = 80
sdx = 4
c(xbar - z * sdx, xbar + z * sdx)
z = qnorm((1 - conf.level)/2, lower.tail = FALSE)
xbar = 80
sdx = 4
c(xbar - z * sdx, xbar + z * sdx)
setwd("C:\\Users\\Sridhar\\Desktop\\Desktop_20150323\\Batch 13\\CSE 7315c\\Day04")
# Calculating probabilities and corresponding values
# WSJ Circulation
1 - pnorm(1800000, mean=1717000, sd=50940)
pbinom(104, 150, 0.75, lower.tail = TRUE, log.p = FALSE)
pnorm(104.5, 150*0.75, sqrt(150*0.75*0.25))
pnorm(104, 150*0.75, sqrt(150*0.75*0.25))
pbinom(120, 150, 0.75, lower.tail = TRUE, log.p = FALSE)-
pbinom(109, 150, 0.75, lower.tai
pbinom(109, 150, 0.75, lower.tail = TRUE, log.p = FALSE)
pbinom(120, 150, 0.75, lower.tail = TRUE, log.p = FALSE)-
pbinom(109, 150, 0.75, lower.tail = TRUE, log.p = FALSE)
pnorm(120.5, 150*0.75, sqrt(150*0.75*0.25))-
pnorm(109.5, 150*0.75, sqrt(150*0.75*0.25))
1-pnorm(230, 211, 46)
pregnancy <- read.csv("HadlumPregnancy.csv", header=T, sep=",")
pregnancy = pregnancy[,-2]
summary(pregnancy)
var(pregnancy)
mean(pregnancy)
pnorm(340, mean(pregnancy), sd(pregnancy))
plot(pregnancy)
data <- replicate(100, rnorm(200, mean(pregnancy), sd(pregnancy)))
#data <- matrix(rnorm(100*200, mean(pregnancy), sd(pregnancy)), 200)
norm.interval = function(data, variance = var(data), conf.level = 0.95)
{
z = qnorm((1 - conf.level)/2, lower.tail = FALSE)
xbar <- mean(data)
sdx <- sqrt(var(data)/length(data))
c(xbar - z * sdx, xbar + z * sdx)
}
norm.interval(pregnancy, 2)
conf.int <- apply(data, 2, norm.interval)
plot(range(conf.int), c(0, 1 + 100), type = "n", xlab = "mean tail length",
ylab = "sample run")
for (i in 1:100) lines(conf.int[, i], rep(i, 2), lwd = 1)
abline(v = mean(pregnancy), lwd = 3, lty = 1)
# Count number of intervals containing population mean
sum(conf.int[1, ] <= mean(pregnancy) & conf.int[2, ] >= mean(pregnancy))
qnorm(0.975, 0, 1)
qnorm(0.025, 0, 1)
qnorm(0.05, 0, 1)
qnorm(0.95, 0, 1)
compoff <- c(6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16)
compoff
t.test(compoff, conf.level = 0.90)
ttest <- t.test(compoff)
ttest$statistic
sd(compoff)
ttest$parameter
compoff <- c(6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16, 6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16,6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16, 6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16,6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16, 6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16)
# compoff <- c(6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16)
compoff
t.test(compoff, conf.level = 0.90)
compoff <- c(6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16)
compoff
t.test(compoff, conf.level = 0.95)
setwd("C:\\Users\\Sridhar\\Desktop\\Desktop_20150323\\Batch 14\\CSE 7315c\\Day04")
qnorm(0.8, 0, 1)
qnorm(0.975, 0, 1)
qnorm(0.025, 0, 1)
qnorm(0.05, 0, 1)
qnorm(0.95, 0, 1)
# Hadlum vs Hadlum case
pregnancy <- read.csv("HadlumPregnancy.csv", header=T, sep=",")
pregnancy = pregnancy[,-2]
summary(pregnancy)
var(pregnancy)
mean(pregnancy)
pnorm(340, mean(pregnancy), sd(pregnancy))
plot(pregnancy)
# Confidence Intervals
# Number of samples = 100
# Sample size = 200
data <- replicate(100, rnorm(200, mean(pregnancy), sd(pregnancy)))
#data <- matrix(rnorm(100*200, mean(pregnancy), sd(pregnancy)), 200)
data <- matrix(rnorm(100*200, mean(pregnancy), sd(pregnancy)), 200)
norm.interval = function(data, variance = var(data), conf.level = 0.95)
{
z = qnorm((1 - conf.level)/2, lower.tail = FALSE)
xbar <- mean(data)
sdx <- sqrt(var(data)/length(data))
c(xbar - z * sdx, xbar + z * sdx)
}
norm.interval(pregnancy, 2)
conf.int <- apply(data, 2, norm.interval)
plot(range(conf.int), c(0, 1 + 100), type = "n", xlab = "mean tail length",
ylab = "sample run")
for (i in 1:100) lines(conf.int[, i], rep(i, 2), lwd = 1)
abline(v = mean(pregnancy), lwd = 3, lty = 1)
# Count number of intervals containing population mean
sum(conf.int[1, ] <= mean(pregnancy) & conf.int[2, ] >= mean(pregnancy))
pnorm(2.33, 0, 1)
setwd("C:\\Users\\Sridhar\\Desktop\\Desktop_20150323\\Batch 14\\CSE 7315c\\Day04")
# Calculating probabilities and corresponding values
# WSJ Circulation
1 - pnorm(1800000, mean=1717000, sd=50940)
pnorm(1600000,1717000,50940)
pbinom(104, 150, 0.75, lower.tail = TRUE, log.p = FALSE)
pnorm(104, 150*0.75, sqrt(150*0.75*0.25))
pnorm(104.5, 150*0.75, sqrt(150*0.75*0.25))
1-pnorm(230, 211, 46)
1-pnorm(230, 211, 46/sqrt(25))
pregnancy <- read.csv("HadlumPregnancy.csv", header=T, sep=",")
pregnancy = pregnancy[,-2]
summary(pregnancy)
var(pregnancy)
mean(pregnancy)
pnorm(340, mean(pregnancy), sd(pregnancy))
plot(pregnancy)
# Confidence Intervals
# Number of samples = 100
# Sample size = 200
data <- replicate(100, rnorm(200, mean(pregnancy), sd(pregnancy)))
#data <- matrix(rnorm(100*200, mean(pregnancy), sd(pregnancy)), 200)
norm.interval = function(data, variance = var(data), conf.level = 0.95)
{
z = qnorm((1 - conf.level)/2, lower.tail = FALSE)
xbar <- mean(data)
sdx <- sqrt(var(data)/length(data))
c(xbar - z * sdx, xbar + z * sdx)
}
norm.interval(pregnancy, 2)
conf.int <- apply(data, 2, norm.interval)
plot(range(conf.int), c(0, 1 + 100), type = "n", xlab = "mean tail length",
ylab = "sample run")
for (i in 1:100) lines(conf.int[, i], rep(i, 2), lwd = 1)
abline(v = mean(pregnancy), lwd = 3, lty = 1)
# Count number of intervals containing population mean
sum(conf.int[1, ] <= mean(pregnancy) & conf.int[2, ] >= mean(pregnancy))
qnorm(0.05, 0, 1)
qnorm(0.95, 0, 1)
compoff <- c(6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16)
compoff
t.test(compoff, conf.level = 0.95)
t.test(compoff, conf.level = 0.90)
ttest <- t.test(compoff)
ttest$statistic
sd(compoff)
ttest$parameter
# Critical t value at a specified confidence level and degrees of freedom
conf.level = 0.95
df = 1000
qt((1-conf.level)/2, df)
conf.level = 0.90
df = 17
qt((1-conf.level)/2, df)
1-pnorm(1.03,0,1)
pnorm(1.03,0,1)
pnorm(84.12,80,4)
pnorm(1.13,0,1)
pnorm(95.88,93,sqrt(6.51))
pnorm(95.88,98,sqrt(1.96))
1-pbinom(33,52,0.5,lower.tail = TRUE, log.p = FALSE)
pbinom(33,52,0.5,lower.tail = TRUE, log.p = FALSE)
1-pnorm(32.5,26,sqrt(13))
1-pnorm(33.5,26,sqrt(13))
1-pbinom(95,150,0.75,lower.tail = TRUE, log.p = FALSE)
pbinom(95,150,0.75,lower.tail = FALSE, log.p = FALSE)
pbinom(32,52,0.5,lower.tail = FALSE, log.p = FALSE)
1-pnorm(32.5,26,sqrt(13))
1-pnorm(95.5,150*0.75, sqrt(150*0.75*0.25))
1 - pnorm(1400000, mean=1359745, sd=50000)
pnorm(1300000,1359745,50000)
pnorm(1200000,1359745,50000)
pnorm(1250000,1359745,50000)
1 - pnorm(1450000, mean=1359745, sd=50000)
dbinom(104, 150, 0.75, log = FALSE)
pbinom(104, 150, 0.75, lower.tail = TRUE, log.p = FALSE)
pnorm(104.5, 150*0.75, sqrt(150*0.75*0.25))
pbinom(96, 150, 0.75, lower.tail = FALSE, log.p = FALSE)
pbinom(120, 150, 0.75, lower.tail = TRUE, log.p = FALSE)-
pbinom(109, 150, 0.75, lower.tail = TRUE, log.p = FALSE)
pnorm(120.5, 150*0.75, sqrt(150*0.75*0.25))-
pnorm(109.5, 150*0.75, sqrt(150*0.75*0.25))
pnorm(95.5, 150*0.75, sqrt(150*0.75*0.25))
1-pnorm(95.5, 150*0.75, sqrt(150*0.75*0.25))
1-pnorm(230, 211, 46)
1-pnorm(230, 211, 46/sqrt(25))
pnorm(2.33, 0, 1)
pregnancy <- read.csv("HadlumPregnancy.csv", header=T, sep=",")
pregnancy = pregnancy[,-2]
summary(pregnancy)
var(pregnancy)
mean(pregnancy)
pnorm(349, mean(pregnancy), sd(pregnancy))
plot(pregnancy)
data <- replicate(100, rnorm(200, mean(pregnancy), sd(pregnancy)))
data <- matrix(rnorm(100*200, mean(pregnancy), sd(pregnancy)), 200)
norm.interval = function(data, variance = var(data), conf.level = 0.95)
{
z = qnorm((1 - conf.level)/2, lower.tail = FALSE)
xbar <- mean(data)
sdx <- sqrt(var(data)/length(data))
c(xbar - z * sdx, xbar + z * sdx)
}
norm.interval(pregnancy, 2)
conf.int <- apply(data, 2, norm.interval)
plot(range(conf.int), c(0, 1 + 100), type = "n", xlab = "mean tail length",
ylab = "sample run")
for (i in 1:100) lines(conf.int[, i], rep(i, 2), lwd = 1)
data
data <- replicate(100, rnorm(200, mean(pregnancy), sd(pregnancy)))
data
abline(v = mean(pregnancy), lwd = 3, lty = 1)
# Count number of intervals containing population mean
sum(conf.int[1, ] <= mean(pregnancy) & conf.int[2, ] >= mean(pregnancy))
qnorm(0.975, 0, 1)
qnorm(0.025, 0, 1)
qnorm(0.05, 0, 1)
qnorm(0.95, 0, 1)
compoff <- c(6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16)
compoff
t.test(compoff, conf.level = 0.90)
t.test(compoff, conf.level = 0.95)
t.test(compoff, conf.level = 0.99)
ttest <- t.test(compoff)
ttest$statistic
sd(compoff)
ttest$parameter
# Critical t value at a specified confidence level and degrees of freedom
conf.level = 0.90
df = 17
qt((1-conf.level)/2, df)
qt(0.025,24)
qt(0.025, 19)
qt(0.975, 19)
1 - pnorm(1450000, mean=1359745, sd=50000)
pnorm(1250000,1359745,50000)
pbinom(104, 150, 0.75, lower.tail = TRUE, log.p = FALSE)
pnorm(104.5, 150*0.75, sqrt(150*0.75*0.25))
pbinom(120, 150, 0.75, lower.tail = TRUE, log.p = FALSE)-
pbinom(109, 150, 0.75, lower.tail = TRUE, log.p = FALSE)
pnorm(120.5, 150*0.75, sqrt(150*0.75*0.25))-
pnorm(109.5, 150*0.75, sqrt(150*0.75*0.25))
pbinom(96, 150, 0.75, lower.tail = FALSE, log.p = FALSE)
1-pnorm(95.5, 150*0.75, sqrt(150*0.75*0.25))
1-pnorm(230, 211, 46)
1-pnorm(230, 211, 46/sqrt(25))
pregnancy <- read.csv("HadlumPregnancy.csv", header=T, sep=",")
pregnancy = pregnancy[,-2]
summary(pregnancy)
var(pregnancy)
mean(pregnancy)
pnorm(349, mean(pregnancy), sd(pregnancy))
plot(pregnancy)
data <- replicate(100, rnorm(200, mean(pregnancy), sd(pregnancy)))
#data <- matrix(rnorm(100*200, mean(pregnancy), sd(pregnancy)), 200)
norm.interval = function(data, variance = var(data), conf.level = 0.95)
{
z = qnorm((1 - conf.level)/2, lower.tail = FALSE)
xbar <- mean(data)
sdx <- sqrt(var(data)/length(data))
c(xbar - z * sdx, xbar + z * sdx)
}
norm.interval(pregnancy, 2)
conf.int <- apply(data, 2, norm.interval)
plot(range(conf.int), c(0, 1 + 100), type = "n", xlab = "mean tail length",
ylab = "sample run")
for (i in 1:100) lines(conf.int[, i], rep(i, 2), lwd = 1)
abline(v = mean(pregnancy), lwd = 3, lty = 1)
# Count number of intervals containing population mean
sum(conf.int[1, ] <= mean(pregnancy) & conf.int[2, ] >= mean(pregnancy))
compoff <- c(6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16)
compoff
compoff
t.test(compoff, conf.level = 0.90)
ttest <- t.test(compoff)
ttest$statistic
sd(compoff)
ttest$parameter
conf.level = 0.90
df = 17
qt((1-conf.level)/2, df)
1 - pnorm(1450000, mean=1359745, sd=50000)
pnorm(1250000,1359745,50000)
pnorm(1200000,1359745,50000)
pbinom(104, 150, 0.75, lower.tail = TRUE, log.p = FALSE)
dbinom(104, 150, 0.75, log = FALSE)
pnorm(104.5, 150*0.75, sqrt(150*0.75*0.25))
pbinom(120, 150, 0.75, lower.tail = TRUE, log.p = FALSE)-
pbinom(109, 150, 0.75, lower.tail = TRUE, log.p = FALSE)
pnorm(120.5, 150*0.75, sqrt(150*0.75*0.25))-
pnorm(109.5, 150*0.75, sqrt(150*0.75*0.25))
pbinom(96, 150, 0.75, lower.tail = FALSE, log.p = FALSE)
1-pnorm(95.5, 150*0.75, sqrt(150*0.75*0.25))
# Serum Cholesterol
1-pnorm(230, 211, 46)
1-pnorm(230, 211, 46/sqrt(25))
pregnancy <- read.csv("HadlumPregnancy.csv", header=T, sep=",")
pregnancy = pregnancy[,-2]
summary(pregnancy)
var(pregnancy)
mean(pregnancy)
pnorm(349, mean(pregnancy), sd(pregnancy))
plot(pregnancy)
data <- replicate(100, rnorm(200, mean(pregnancy), sd(pregnancy)))
#data <- matrix(rnorm(100*200, mean(pregnancy), sd(pregnancy)), 200)
norm.interval = function(data, variance = var(data), conf.level = 0.95)
{
z = qnorm((1 - conf.level)/2, lower.tail = FALSE)
xbar <- mean(data)
sdx <- sqrt(var(data)/length(data))
c(xbar - z * sdx, xbar + z * sdx)
}
norm.interval(pregnancy, 2)
conf.int <- apply(data, 2, norm.interval)
plot(range(conf.int), c(0, 1 + 100), type = "n", xlab = "mean tail length",
ylab = "sample run")
for (i in 1:100) lines(conf.int[, i], rep(i, 2), lwd = 1)
abline(v = mean(pregnancy), lwd = 3, lty = 1)
# Count number of intervals containing population mean
sum(conf.int[1, ] <= mean(pregnancy) & conf.int[2, ] >= mean(pregnancy))
norm.interval = function(data, variance = var(data), conf.level = 0.999)
{
z = qnorm((1 - conf.level)/2, lower.tail = FALSE)
xbar <- mean(data)
sdx <- sqrt(var(data)/length(data))
c(xbar - z * sdx, xbar + z * sdx)
}
norm.interval(pregnancy, 2)
conf.int <- apply(data, 2, norm.interval)
plot(range(conf.int), c(0, 1 + 100), type = "n", xlab = "mean tail length",
ylab = "sample run")
for (i in 1:100) lines(conf.int[, i], rep(i, 2), lwd = 1)
abline(v = mean(pregnancy), lwd = 3, lty = 1)
# Count number of intervals containing population mean
sum(conf.int[1, ] <= mean(pregnancy) & conf.int[2, ] >= mean(pregnancy))
compoff <- c(6, 21, 17, 20, 7, 0, 8, 16, 29, 3, 8, 12, 11, 9, 21, 25, 15, 16)
compoff
t.test(compoff, conf.level = 0.90)
ttest <- t.test(compoff)
ttest$statistic
sd(compoff)
ttest$parameter
