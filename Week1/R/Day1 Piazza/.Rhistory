###########################################  Matrices  ########################
m <- matrix(nrow = 2, ncol = 3)
m
dim(m)
# Order Character , Numeric and Logical
###############################  Explicit Coercion #########################
x <- 0:6
class(x)
as.numeric(x)
# Order Character , Numeric and Logical
###############################  Explicit Coercion #########################
x <- 0:6
class(x)
as.numeric(x)
as.numeric(x)
# The : operator is used to create integer sequences.
x <- 1:20
x
##################################### Creating Vectors######################################
# The c() function can be used to create vectors of objects.
x <- c(0.5, 0.6) ## numeric
x
x <- c(TRUE, FALSE) ## logical
x
x <- c(T, F) ## logical
x
x <- c("a", "b", "c") ## character
x
x <- 9:29 ## integer
x
#################################  Mixing Objects ##################################
y <- c(1.7, "a") ## character
y
y <- c(TRUE, 2) ## numeric
y
y <- c(TRUE, 2,FALSE) ## numeric
y
y <- c("a", TRUE) ## character
y
# Order Character , Numeric and Logical
###############################  Explicit Coercion #########################
x <- 0:6
x
class(x)
# Order Character , Numeric and Logical
###############################  Explicit Coercion #########################
x <- 0:6
x
class(x)
as.numeric(x)
x
class(x)
as.logical(x)
as.character(x)
as.character(x)
#Coercion results in NAs.
x <- c("25-35", "twenty five", "twenty eight",25,'25-35')
as.numeric(x)
as.logical(x)
###########################################  Matrices  ########################
m <- matrix(nrow = 2, ncol = 3)
m
dim(m)
m <- matrix(1:6, nrow = 2, ncol = 3)  # here byrow=FALSE
m
m <- matrix(1:6, nrow = 2, ncol = 3,byrow = TRUE)
m
m <- 1:10
m
dim(m) <- c(2, 5)
m
x <- 1:3
y <- 10:12
cbind(x, y)
rbind(x, y)
x <- list(c(1,2), "a", TRUE)
x
x <- c(1, 2, NA, 10, 3)
is.na(x)
is.nan(x)
x <- c(1, 2, NaN, NA, 3)
is.na(x)
is.nan(x)
x <- c(1, 2, NaN, NA, 3)
is.na(x)
is.nan(x)
x <- data.frame(Age = c(25,30,35,40), Working = c(T, T, F, F))
x
nrow(x)
ncol(x)
############################ Names & list #####################
x <- list(a = 1, b = 2, c = 3)
x
########################  Names & Matrix ###########################
m <- matrix(1:4, nrow = 2, ncol = 2)
m
dimnames(m) <- list(c("a", "b"), c("c", "d"))
m
x <- c(2,4,6,6,8,2)
x[1]
x[2]
x[1:4]
x[x > 2]
u <- x>2
u
x[u]
#############################  Sub-set of a matrix ####################
#Matrices can be subset in the usual way with (i , j) type indices.
x <- matrix(1:6, 2, 3)
x
x[1, 2]
x[2, 1]
# row/column  Indices can also be excluded as cited below to get only columns or only rows respectively
x[1, ]
x[, 2]
x <- c(1, 2, NA, 4, NA, 5)
x[! is.na(x)]
y=na.omit(x)
y
y=na.omit(x)
y
x <- 1:4; y <- 6:9
x + y
x > 2
x * y
x <- matrix(1:4, 2, 2); y <- matrix(rep(10, 4), 2, 2)
x * y ## element-wise multiplication
x / y
x %*% y        ## true matrix multiplication
#################### Data Types (vectors, matrices & dataframes) ####################
v1=c(1,2,3,4,5) #numeric vector
v2=c("a","b","c","d","e") #character vector
v3=c(TRUE,FALSE,TRUE,FALSE,TRUE) #logical vector
str(v1) #to view structure of the vector
length(v1) #to get number of  elements in the vector
str(v2)
str(v3)
str(c("fg","gh"))
cbind(v1,v2,v3) #column binding
rbind(v1,v2,v3) #row binding
#Playing with a vector
v4 = c(10,9,8,7,6,5)
max(v4)
min(v4)
mean(v4)
sd(v4)
v4[c(1,3)]#To get 1st and 3rd item
v4[v4>8] #To get elements which are greater than 8
#Matrix and data frame
M=matrix(c(1,2,3,4),nrow=2,ncol=2,byrow=TRUE) # to create a matrix
ls()
rm(M)
ls()
data = data.frame(v1,v2,v3) # to create a data frame
names(data)
colnames(data)
names(data) = c("ID","Name","Selected") # to assign variable names
data1 = data[,c(2:3)]
data1 = data[,c(2:3)]
data1
#Handling missing values in the data
v=c(10,25,20,NA,36,100)
mean(v,na.rm=TRUE)
mean(v)
is.na(v)
v[is.na(v)]=555
v
length(vec)
vec = c(1,2,3,4,5,6,7,8,9,10,1,2,3,4,2,3,4,3,4,4)
length(vec)
mean(vec)
median(vec)
quantile(vec)
sd(vec)
var(vec)
#To create sequence of nummbers
seq(1,5, by=.5)
#Repeating a number
rep(1,10)
