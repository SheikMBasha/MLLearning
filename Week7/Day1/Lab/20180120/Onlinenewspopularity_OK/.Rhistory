rm(list=ls(all=TRUE))
data<-read.csv("OnlineNewsPopularity.csv",header=T)
str(data)
summary(data)
sum(is.na(data))
data<-data[,c(1,14:19,32:44)]
head(data)
rm(list=ls(all=TRUE))
data<-read.csv("OnlineNewsPopularity.csv",header=T)
str(data)
summary(data)
sum(is.na(data))
data<-data[,-c(1,14:19,32:44)]
head(data)
rows=seq(1,nrow(data),1)
set.seed(123)
trainRows=sample(rows,round(nrow(data)*0.7))
train=data[trainRows,]
test=data[-(trainRows),]
x_train = train[,-ncol(train)]
x_test = test[,-ncol(test)]
y_train = train[,ncol(train)]
y_test = test[,ncol(test)]
ncol(train)
View(train)
pca = princomp(x_train)
pca$loadings
summary(pca)
pca_train = predict(pca, x_train)
pca_test = predict(pca, x_test)
train2=data.frame(x_train,y_train)
test2=data.frame(x_test,y_test)
LinReg<- lm(y_train~ ., data=train2)
summary(LinReg)
library(DMwR)
regr.eval(train2$y_train, LinReg$fitted.values)
Pred<-predict(LinReg,test2)
regr.eval(test2$y_test, Pred)
train3=data.frame(pca_train[,1:5],y_train)
test3=data.frame(pca_test[,1:5],y_test)
LinReg<- lm(y_train~ ., data=train3)
summary(LinReg)
library(DMwR)
regr.eval(train3$y_train, LinReg$fitted.values)
Pred<-predict(LinReg,test3)
regr.eval(test3$y_test, Pred)
regr.eval(train2$y_train, LinReg$fitted.values)
Pred<-predict(LinReg,test2)
options("scipen"=100, "digits"=4)
rm(list=ls(all=TRUE))
data<-read.csv("OnlineNewsPopularity.csv",header=T)
str(data)
summary(data)
sum(is.na(data))
data<-data[,-c(1,14:19,32:44)]
head(data)
rows=seq(1,nrow(data),1)
set.seed(123)
trainRows=sample(rows,round(nrow(data)*0.7))
train=data[trainRows,]
test=data[-(trainRows),]
x_train = train[,-ncol(train)]
x_test = test[,-ncol(test)]
y_train = train[,ncol(train)]
y_test = test[,ncol(test)]
pca = princomp(x_train)
pca$loadings
summary(pca)
pca_train = predict(pca, x_train)
pca_test = predict(pca, x_test)
train2=data.frame(x_train,y_train)
test2=data.frame(x_test,y_test)
LinReg<- lm(y_train~ ., data=train2)
summary(LinReg)
library(DMwR)
#Error verification on train data
regr.eval(train2$y_train, LinReg$fitted.values)
#Error verification on test data
Pred<-predict(LinReg,test2)
regr.eval(test2$y_test, Pred)
train3=data.frame(pca_train[,1:5],y_train)
test3=data.frame(pca_test[,1:5],y_test)
LinReg<- lm(y_train~ ., data=train3)
summary(LinReg)
library(DMwR)
#Error verification on train data
regr.eval(train3$y_train, LinReg$fitted.values)
#Error verification on test data
Pred<-predict(LinReg,test3)
regr.eval(test3$y_test, Pred)
train3=data.frame(pca_train[,1:10],y_train)
test3=data.frame(pca_test[,1:10],y_test)
LinReg<- lm(y_train~ ., data=train3)
summary(LinReg)
library(DMwR)
regr.eval(train3$y_train, LinReg$fitted.values)
Pred<-predict(LinReg,test3)
regr.eval(test3$y_test, Pred)
train3=data.frame(pca_train[,1:5],y_train)
test3=data.frame(pca_test[,1:5],y_test)
LinReg<- lm(y_train~ ., data=train3)
summary(LinReg)
library(DMwR)
#Error verification on train data
regr.eval(train3$y_train, LinReg$fitted.values)
#Error verification on test data
Pred<-predict(LinReg,test3)
regr.eval(test3$y_test, Pred)
options("scipen"=100, "digits"=4)
